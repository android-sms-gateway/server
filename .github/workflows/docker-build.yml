name: docker-build

on:
  workflow_call:
    inputs:
      app-name:
        required: true
        type: string
    secrets:
      username:
        required: true
      password:
        required: true
    outputs:
      app-version:
        value: ${{ jobs.build.outputs.app-version }}

jobs:
  build:
    name: Docker image
    runs-on: ubuntu-latest
    if: github.actor != 'dependabot[bot]' # skip on dependabot because it's not allowed to access secrets
    permissions:
      packages: write
    outputs:
      app-version: ${{ steps.meta.outputs.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            capcom6/${{ inputs.app-name }}
            ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}

      - name: Log into Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.username }}
          password: ${{ secrets.password }}

      - name: Login to Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set APP_VERSION env
        run: echo APP_VERSION=$(echo ${GITHUB_REF} | rev | cut -d'/' -f 1 | rev ) >> ${GITHUB_ENV}
      - name: Set APP_RELEASE env
        run: echo APP_RELEASE=$(( ($(date +%s) - $(date -d "2022-06-15" +%s)) / 86400 )) >> ${GITHUB_ENV}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          file: build/package/Dockerfile
          build-args: |
            APP=${{ inputs.app-name }}
            APP_VERSION=${{ env.APP_VERSION }}
            APP_RELEASE_ID=${{ env.APP_RELEASE }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # cache-from: type=gha
          # cache-to: type=gha,mode=max
